/*
 * This file is generated by jOOQ.
 */
package jooq


import jooq.tables.Author
import jooq.tables.Books

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BookDb : SchemaImpl("book_db", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>book_db</code>
         */
        val BOOK_DB: BookDb = BookDb()
    }

    /**
     * The table <code>book_db.author</code>.
     */
    val AUTHOR: Author get() = Author.AUTHOR

    /**
     * The table <code>book_db.books</code>.
     */
    val BOOKS: Books get() = Books.BOOKS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Author.AUTHOR,
        Books.BOOKS
    )
}
